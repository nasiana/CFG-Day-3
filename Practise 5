-- write a number of queries to analyse sales data and 'report it back to our big bosses'

use shop
-- show everything in sales1 table
select * from sales1;

-- group the shops by the store location and show total sales
select SUM(s.SalesAmount) as 'Sales', s.Store
from sales1 s
group by s.Store;

-- group the data by Sales, Store location and Month
select AVG(s.SalesAmount) as 'Sales', s.Store, s.Month
from sales1 s
group by s.Month;

-- select sales in a range of 30 and 70 then group by store location
select s.SalesAmount as 'Sales', s.Store
from sales1 s
WHERE s.SalesAmount BETWEEN 30 AND 70
GROUP BY s.Store;

-- shows the total sales  per Sales Person and how many sales they made each
select sum(s.SalesAmount) as 'Sales', COUNT(s.SalesPerson) as 'Frequency', s.SalesPerson
from sales1 s
GROUP BY s.SalesPerson;

-- shows the total sales  per Sales Person and how many sales they made each, where the sales are in the range of 40 <= x <= 70
select sum(s.SalesAmount) as 'Sales', COUNT(s.SalesPerson) as 'Frequency', s.SalesPerson
from sales1 s
WHERE s.SalesAmount BETWEEN 40 AND 70
GROUP BY s.SalesPerson;

-- Find the  max sales amount that each sales person made
select max(s.SalesAmount), s.SalesPerson
from sales1 s
group by s.SalesPerson;

-- Find the  min sales amount that each sales person made
select min(s.SalesAmount), s.SalesPerson
from sales1 s
group by s.SalesPerson;

-- find all sales records (and all columns) that took place in the London store, not in December, but sales concluded by Bill or Frank for amount higher than £50
select *
from sales1 s
where s.Store = 'London' AND s.Month != 'Dec'
AND (s.SalesPerson = 'Bill' or s.SalesPerson = 'Frank')
and s.SalesAmount > 50;

-- find all sales records (and all columns) that took place in the London store, not in December, but sales concluded by Bill or Frank for amount higher than £50
-- uses IN clause
select *
from sales1 s
where s.Store = 'London' AND s.Month != 'Dec'
AND s.SalesPerson IN ('Frank', 'Bill')
and s.SalesAmount > 50;

-- how many sales took place each week (in no particular order)
select count(*), s.Week, s.Month
from sales1 s
group by s.Week;

-- how many sales took place each week by descending order of sales amount
select count(*), s.Week, s.SalesAmount
from sales1 s
group by s.Week
order by s.SalesAmount desc ;

-- how many sales took place each week by ascending order of sales amount
select count(*), s.Week, s.SalesAmount
from sales1 s
group by s.Week
order by s.SalesAmount asc;

-- how many sales took place each week by descending order 
select s.Week, count(*)
from sales1 s
group by s.Week
order by s.Week desc ;

-- how many sales took place each week by ascending order
select s.Week, count(*)
from sales1 s
group by s.Week
order by s.Week asc ;

-- how many sales took place each week by ascending order
select s.Week, count(s.Week)
from sales1 s
group by s.Week
order by s.Week asc;

-- which week resulted in the most sales in terms of dollar amounts
select MAX(s.SalesAmount), s.Week, s.Month
from sales1 s;

--
select * from sales1;
-- which weeks of the month resulted in the most sales in terms of dollar amounts
select s.week, sum(s.SalesAmount) as 'Sales'
from sales1 s
group by S.week
order by Sales ASC;

--
select * from sales1 s;
-- excluding saturdays, which Sales People had the most number of sales (count)?
select count(*) as 'Frequency_of_Sales', s.SalesPerson
from sales1 s
where s.Day != 'Saturday'
group by s.SalesPerson
order by Frequency_of_Sales;


-- 
select * from sales1;
-- of these, who had sales greater than 150?
select count(*) as 'Frequency_of_Sales', s.SalesPerson, SUM(s.SalesAmount) as 'Total_Sales'
from sales1 s
where s.Day != 'Saturday' 
group by s.SalesPerson
having Total_Sales > 150;
